//
//  AppDelegate.m
//  CashierDeskIphone
//
//  Created by mac on 13-8-27.
//  Copyright (c) 2013年 MaxLinksTec. All rights reserved.
//

#import "AppDelegate.h"
#import "AppInitViewController.h"
#import "CommonUtil.h"
#import "HttpClientRequest.h"
#import "SVProgressHUD.h"
#import "Reachability.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    
    //
    self.m_isFirst = YES;
    
    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) {
        
//        UIApplication *myApp = [UIApplication sharedApplication];
        
//        [myApp setStatusBarStyle: UIStatusBarStyleLightContent];
        
        // 设置状态栏的颜色
        [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;
    
    }else{
        
        // 设置状态栏的颜色
        [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleBlackOpaque;

    }
    
    
    // 版本检测请求数据
    [self versionRequest];
    
    // 设置状态栏是否隐藏
    [[UIApplication sharedApplication]setStatusBarHidden:YES];
    

    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
    AppInitViewController* startController = [[AppInitViewController alloc]initWithNibName:@"AppInitViewController" bundle:nil];
    _nav = [[UINavigationController alloc]initWithRootViewController:startController];
    _nav.delegate = self;
    self.window.rootViewController = self.nav;
    // Override point for customization after application launch.
    self.window.backgroundColor = [UIColor whiteColor];
    [self.window makeKeyAndVisible];
    return YES;
}

- (void)applicationWillResignActive:(UIApplication *)application
{
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. 
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
}

- (void)applicationDidBecomeActive:(UIApplication *)application
{
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
}

- (void)applicationWillTerminate:(UIApplication *)application
{
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}


- (void)navigationController:(UINavigationController *)navigationController willShowViewController:(UIViewController *)viewController animated:(BOOL)animated
{
    if ([viewController isKindOfClass:[AppInitViewController class]]) {
        navigationController.navigationBarHidden = YES;
    }
}


// 判断网络不好
- (BOOL)isConnectionAvailable{
    
    BOOL  isExistenceNetWork = YES;
    
    Reachability *reach = [Reachability reachabilityWithHostName:@"www.baidu.com"];
    
    switch ( [reach currentReachabilityStatus] ) {
        case NotReachable:
            isExistenceNetWork = NO;
            break;
        case ReachableViaWiFi:
            isExistenceNetWork = YES;
            break;
        case ReachableViaWWAN:
            isExistenceNetWork = YES;
            break;
            
        default:
            break;
    }
    
    if ( !isExistenceNetWork ) {
        
        [SVProgressHUD showErrorWithStatus:@"网络不给力，请稍后再试！"];
        
    }
    
    
    return isExistenceNetWork;
    
}
- (void)versionRequest{
    
    // 判断网络是否存在
    if ( ![self isConnectionAvailable] ) {
        
        return;
    }

    
    HttpClientRequest* requstClient = [HttpClientRequest sharedInstance];
    NSDictionary* parameters = [NSDictionary dictionaryWithObjectsAndKeys:
                                @"PalyCashierApple",@"versionType",nil];
    
    [SVProgressHUD showWithStatus:@"版本检测中"];
    
    [requstClient request:@"AppsVersion.ashx" parameters:parameters successed:^(JSONDecoder*json,id responseObject){
        
        NSData* data = [NSData dataWithData:responseObject];
        
        NSDictionary* handlJson = [json objectWithData:data];
                        
        BOOL success = [[handlJson objectForKey:@"status"]boolValue];
        
        NSLog(@"%@",handlJson);
        
        if (success) {
                  
            NSString *versionNum = [[handlJson objectForKey:@"appsVersion"]valueForKey:@"versionNumber"];
            NSString *versionUrl = [[handlJson objectForKey:@"appsVersion"] valueForKey:@"appPkgUrl"];
            
            NSString *message = [[handlJson objectForKey:@"appsVersion"] valueForKey:@"coreIntro"];
            
            // 保存版本号和下载地址
            if ( versionNum.length != 0 ) {
                
                [CommonUtil addValue:versionNum andKey:VERSION];
            }
            
            if ( versionUrl.length != 0 ) {
                
                [CommonUtil addValue:versionUrl andKey:APPURL];

            }
            
            NSString *version = [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"];
            
            NSLog(@"version = %@",version);
            
            if ([versionNum floatValue]>[version floatValue]) {
                
                UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"保智付收银台发布了新版本"
                                                                   message:message
                                                                  delegate:self
                                                         cancelButtonTitle:@"暂不更新"
                                                         otherButtonTitles:@"更新", nil];
                
                alertView.tag = 100001;
                
                [alertView show];
            }

            
            [SVProgressHUD dismiss];
            
        }else
        {
            NSString *msg = [json valueForKey:@"msg"];

            [SVProgressHUD showErrorWithStatus:msg];
            
        }
    } failured:^(NSError* error)
     {
         NSLog(@"error:%@",error.description);
         [SVProgressHUD showErrorWithStatus:error.description];
     }];
    
    
}

#pragma mark - UIAlertViewDelegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    if ( alertView.tag == 100001 ) {
        
        if ( buttonIndex == 1 ) {
            
            // 点击进入版本升级的url-appStore下载的地址
            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[CommonUtil getValueByKey:APPURL]]];
        }
    }
}


@end
